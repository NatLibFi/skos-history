PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dsv: <http://purl.org/iso25964/DataSet/Versioning#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
PREFIX sh: <http://purl.org/skos-history/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xhv: <http://www.w3.org/1999/xhtml/vocab#>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
#
# count deprecated concepts per version
#
SELECT ?version (str(count(?concept)) as ?deprecatedConceptCount) (str(count(?replacedByConcept)) as ?replacedByConceptCount)
WHERE {
  # parameters (currently does not work on conceptType zbwext:Thsys)
  VALUES ( ?versionHistoryGraph ?conceptType ) {
    ( <http://zbw.eu/stw/version> zbwext:Descriptor )
  }
  GRAPH ?versionHistoryGraph {
    ?delta a sh:SchemeDelta ;
      sh:deltaTo ?newVHR ;
      sh:deltaFrom ?oldVHR ;
      dcterms:hasPart ?insertions ;
      dcterms:hasPart ?deletions .
    ?newVHR xhv:prev ?oldVHR ;
      dc:identifier ?version ;
      sh:usingNamedGraph/sd:name ?versionGraph .
    ?oldVHR sh:usingNamedGraph/sd:name ?oldVersionGraph .
    ?insertions a sh:SchemeDeltaInsertions ;
      sh:usingNamedGraph/sd:name ?insertionsGraph .
    ?deletions a sh:SchemeDeltaDeletions ;
      sh:usingNamedGraph/sd:name ?deletionsGraph .
  }
  # identify the deprecated concepts
  GRAPH ?insertionsGraph {
    ?concept owl:deprecated true
  }
  # filter on concept type
  GRAPH ?versionGraph {
    ?concept a ?conceptType .
    OPTIONAL {
      ?concept dcterms:isReplacedBy ?replacedByConcept 
    }
  }
}
GROUP BY ?version
ORDER BY ?version
