prefix dc: <http://purl.org/dc/elements/1.1/>
prefix dcterms: <http://purl.org/dc/terms/>
prefix dsv: <https://raw.github.com/JohanDS/Dataset-versioning--for-KOS-data-sets-/master/DataSetVersioning.owl#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

# build a iso-25964 version history, according to
# https://github.com/JohanDS/Dataset-versioning--for-KOS-data-sets-, based on
# http://www.niso.org/apps/group_public/download.php/9627/Correspondence%20ISO25964-SKOSXL-MADS-2012-10-21.pdf

CONSTRUCT
  {
    ?versionRecord a dsv:VersionHistoryRecord ;
        dsv:isVersionRecordOf ?version ;
        dsv:hasVersionHistorySet ?versionHistorySet ;
        dc:identifier ?id ;
        dc:date ?date .
    ?versionHistorySet dsv:currentVersionRecord ?currentVersionRecord .

    # the following triples would be part of the version graphs
    ##?scheme dsv:hasVersionRecord ?versionRecord .
  }
WHERE
  {
    # get info about all versions
    ?scheme dcterms:hasVersion ?version .
    GRAPH ?version
      { ?scheme owl:versionInfo ?id .
        ?scheme dcterms:issued ?date
      }

    # get name and graph of the current version
    ?scheme owl:versionInfo ?versionName .
    ?scheme dcterms:hasVersion ?currentVersion .
    GRAPH ?currentVersion
      { [] owl:versionInfo ?versionName }

    # build versionHistorySet uri
    #BIND (uri(concat(str(?scheme), '/version/set')) AS ?versionHistorySet)
    #BIND (uri(concat(str(?version), '/record')) AS ?versionRecord)
    #BIND (uri(concat(str(?currentVersion), '/record')) AS ?currentVersionRecord)
    BIND (uri(concat(str(?scheme), '/versionset')) AS ?versionHistorySet)
    BIND (uri(replace(str(?version), '/version/', '/versionrecord/')) AS ?versionRecord)
    BIND (uri(replace(str(?currentVersion), '/version/', '/versionrecord/')) AS ?currentVersionRecord)
  }
