/**
 * nbt, 12.02.2015
 *
 * Adapted from http://www.highcharts.com/demo/bar-negative-stack
 */
$(function () {
  <tmpl_if name="is_diff">
  Highcharts.setOptions({
    colors: ['#ED561B', '#50B432']
  });
  </tmpl_if>
  $(document).ready(function () {
    $('#container').highcharts({
      chart: {
        type: 'bar',
        height: <tmpl_var name="height" />
      },
      title: {
        text: '<tmpl_var name="title" />'
      },
      subtitle: {
        text: '<tmpl_var name="subtitle" />'
      },
      xAxis: [{
        type: 'category',
        labels: {
          useHTML: true,
          formatter:function(){
            return '<span class="stwlabel">' + this.value + '</span>';
          },
          step: 1
        }
      }],
      yAxis: {
        title: {
          text: null
        },
        labels: {
          formatter: function () {
            return (Math.abs(this.value));
          }
        },
        min: -<tmpl_var name="grid_width" />,
        max: <tmpl_var name="grid_width" />
      },

      plotOptions: {
        series: {
          stacking: 'normal'
          <tmpl_if name="drilldown">,
          point: {
            events:{
              click:function(){
                var drilldown_url, re, change_type;
                <tmpl_if name="dd_chart">
                drilldown_url = './' + this.name.substr(0, 1).toLowerCase()
                  + '/<tmpl_var name="url_part">';
                </tmpl_if>
                <tmpl_if name="dd_report">
                drilldown_url = '<tmpl_var name="url_part">'
                  + '&filter=' + this.name.substr(0, this.name.indexOf(" "));
                re = new RegExp("XXXXX", "i");
                // clumsy way to derive the series and its type from its name
                if (this.series.name === "<tmpl_var name="deprecated_name" />") {
                  change_type = 'deprecated';
                } else {
                  change_type = 'added';
                }
                drilldown_url = drilldown_url.replace(re, change_type);
                </tmpl_if>
                window.open(drilldown_url, '_self');
              }
            }
          }
          </tmpl_if>
        }
      },

      tooltip: {
        style: {
          width: 120
        },
        formatter: function () {
          return this.point.name + '<br />' + this.series.name +
              ': ' + Highcharts.numberFormat(Math.abs(this.point.y), 0);
        }
      },
      series:
<tmpl_var name="series" />
    });
  });
});
